/*
1904번 - 01타일

지원이에게 2진 수열을 가르쳐 주기 위해, 지원이 아버지는 그에게 타일들을 선물해주셨다. 그리고 이 각각의 타일들은 0 또는 1이 쓰여 있는 낱장의 타일들이다.

어느 날 짓궂은 동주가 지원이의 공부를 방해하기 위해 0이 쓰여진 낱장의 타일들을 붙여서 한 쌍으로 이루어진 00 타일들을 만들었다. 

결국 현재 1 하나만으로 이루어진 타일 또는 0타일을 두 개 붙인 한 쌍의 00타일들만이 남게 되었다.

그러므로 지원이는 타일로 더 이상 크기가 N인 모든 2진 수열을 만들 수 없게 되었다. 

예를 들어, N=1일 때 1만 만들 수 있고, N=2일 때는 00, 11을 만들 수 있다. (01, 10은 만들 수 없게 되었다.) 

또한 N=4일 때는 0011, 0000, 1001, 1100, 1111 등 총 5개의 2진 수열을 만들 수 있다.

우리의 목표는 N이 주어졌을 때 지원이가 만들 수 있는 모든 가짓수를 세는 것이다. 단 타일들은 무한히 많은 것으로 가정하자.

===============================================================================================================

타일이 00 / 1 의 2가지만 있을 때의 상황.

N이 1일때 -> 1 (1개)
N이 2일때 -> "00" "11" (2개)
N이 3일떄 -> "001" "111" "100" (3개)
N이 4일떄 -> "0000" "0011" "1100" "0110" "1111" (5개) 
N이 5일때 -> "00001" "00111" "00100".... 

-> 피보나치 배열 사용
*/

// 백준에서 문자열 입력시 사용하는 코드
const input = require("fs").readFileSync("dev/stdin").toString().trim().split("\n");

// 입력된 첫 줄을 숫자로 변환 ( 1을 곱하면 숫자로 취급할 수 있음 )
const n = input[0] * 1;

// 원래는 0부터 시작하는 배열 인덱스를 1부터 쓰기 위해 n+1로 쓰기
const d = new Array(n + 1).fill(0);

// 여기서부터는 점화식

d[1] = 1;
d[2] = 2;

for (let i = 3; i <= n; i++) {
    // 문제에서 15746으로 나눈 수를 구하라 했으므로, 15746으로 나누기
    d[i] = (d[i - 1] + d[i - 2]) % 15746;
}

// 결과값 출력
console.log(d[n]);
